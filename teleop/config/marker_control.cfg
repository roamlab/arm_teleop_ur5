[marker_control]
rate_hz = 50
publisher_topic = /cmd_pose

[teleop]
name = teleop_UR5_marker
rate_Hz = 50
velocity_scale = [0.08,0.15]
check_for_collision = False
collision_horizon = .5
collision_dt = .5
manipulator = my_manipulator
manipulator_user_interface_device = my_manipulator_uid
cartesian_controller_world = my_cartesian_controller_world
cartesian_controller_ee = my_cartesian_controller_ee



[my_cartesian_controller_world]
class_name = WorldFrameCartesianController
vel_min = 1.0
# mm/s
vel_max = 15.0
# mm/s
ang_vel_min = 1.0
# deg/s
ang_vel_max = 10.0
# deg/s
pos_err_tolerance = .5
# mm
rot_err_tolerance = 1.0
# deg
vel_lambda = 5.0
rot_lambda = 5.0
# vel_lambda*pos_err_tolerance is outer radius = 100 mm
# pos_err_tolerance is inner radius
# rot_lambda*rot_err_tolerance is outer radius = 50 deg
# rot_err_tolerance is inner radius


[my_cartesian_controller_ee]
class_name = EndEffectorFrameCartesianController

[my_manipulator_uid]
class_name = PoseUserInterfaceSubscriber
rostopic_subscriber_cmd = /cmd_pose
# /position_cartesian_current is of type PoseStamped()
# /cmd_pose is of type Pose()
# /cmd_vel is of type Twist()

[my_manipulator]
rostopic_pose_current = /position_cartesian_current
rostopic_joint_current = /joint_states
command_publisher = my_manipulator_cp
moveit_group_name = manipulator

[my_manipulator_cp]
; class_name = JointStateCommandPublisher
; rostopic_publisher_cmd = /JointVelocityMove
; num_joints = 6
class_name = TwistStampedCommandPublisher
rostopic_publisher_cmd = /CartesianVelocityMove
# /JointVelocityMove is of type JointState() -> requires class_name = JointStateCommandPublisher and num_joints
# /CartesianVelocityMove is of type TwistStamped() -> requires class_name = TwistStampedCommandPublisher
# /CartesianPositionMove is of type PoseStamped() -> requires class_name = PoseStampedCommandPublisher

