[trakstar]
rate_hz = 10
publisher_topic = /cmd_pose
# currently any frames besides /base and /tool0 are not supported
fixed_frame = /base
moving_frame = /tool0
command_filter = command_filter
# initial position setup
initial_pos_publisher_topic = /JointPositionMove
joint_names =  ["shoulder_pan_joint", "shoulder_lift_joint", "elbow_joint", "wrist_1_joint", "wrist_2_joint", "wrist_3_joint"]
# all initial_position (in radians) values multiplied by pi in code
initial_position = [.5, -.5, .5, -.5, -.5, -.5]


[teleop]
topic_name = teleop_UR5_marker
rate_hz = 10
velocity_scale = [0.08,0.15]
check_for_collision = True
collision_horizon = 3.0
collision_dt = .5
manipulator = my_manipulator
manipulator_user_interface_device = my_manipulator_uid
cartesian_controller = my_cartesian_controller_ee


[my_cartesian_controller_world]
class_name = FixedFrameCartesianController
resolved_rates = my_resolved_rates

[my_resolved_rates]
vel_min = 2.0
# mm/s
vel_max = 35.0
# mm/s
ang_vel_min = 2.0
# deg/s
ang_vel_max = 25.0
# deg/s
pos_err_tolerance = 5.0
# mm
rot_err_tolerance = 3.0
# deg
vel_lambda = 20.0
rot_lambda = 20.0
# vel_lambda*pos_err_tolerance is outer radius = 50 mm
# pos_err_tolerance is inner radius
# rot_lambda*rot_err_tolerance is outer radius = 50 deg
# rot_err_tolerance is inner radius


[my_cartesian_controller_ee]
class_name = EndEffectorFrameCartesianController
max_dx_norm = .02
max_dw_norm = .5
position_tolerance = .03
orientation_tolerance = .1


[my_manipulator_uid]
class_name = PoseUserInterfaceSubscriber
rostopic_subscriber_cmd = /cmd_pose
# from trakstar
reference_frame = /base
moving_frame = /tool0

# /position_cartesian_current is of type PoseStamped()
# /cmd_pose is of type Pose()
# /cmd_vel is of type Twist()

[my_manipulator]
rostopic_pose_current = /position_cartesian_current
rostopic_joint_current = /joint_states
command_publisher = my_manipulator_cp
moveit_group_name = manipulator
kinematics = my_kinematics
frame_adapter = my_frame_adapter

[my_kinematics]
reference_frame = /world
moving_frame = /roamhand_base_link

[my_frame_adapter]
from_fixed_frame = /world
to_fixed_frame = /base
from_moving_frame = /roamhand_base_link
to_moving_frame = /tool0
# command_publisher_reference_frame to manipulator_reference_frame
to_fix_T_from_fix = [[-1.0, 0.0, 0.0, 0.0], [0.0, -1.0, 0.0, 0.0], [0.0, 0.0, 1.0, 0.0], [0.0, 0.0, 0.0, 1.0]]
# manipulator_moving_frame to command_publisher_moving_frame
to_mf_T_from_mf = [[0.0, 0.0, 1.0, 0.0], [-1.0, 0.0, 0.0, 0.0], [0.0, -1.0, 0.0, 0.0], [0.0, 0.0, 0.0, 1.0]]


[my_manipulator_cp]
class_name = JointStateCommandPublisher
rostopic_publisher_cmd = /JointVelocityMove
num_joints = 6
# frame definitions do not need to be correct, but it will help to debug
reference_frame = /base
moving_frame = /tool0

; class_name = TwistStampedCommandPublisher
; rostopic_publisher_cmd = /CartesianVelocityMove
# /JointVelocityMove is of type JointState() -> requires class_name = JointStateCommandPublisher and num_joints
# /CartesianVelocityMove is of type TwistStamped() -> requires class_name = TwistStampedCommandPublisher
# /CartesianPositionMove is of type PoseStamped() -> requires class_name = PoseStampedCommandPublisher

[command_filter]
class_name = LowPassCommandFilter
num_past_samples = 3
difference_limit_value = .01
